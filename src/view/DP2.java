/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.InventoryJpaController;
import control.ProductJpaController;
import control.SaleJpaController;
import control.exceptions.PreexistingEntityException;
import entity.Inventory;
import entity.Product;
import entity.Sale;
import entity.SalePK;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author magic
 */
public class DP2 extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    private final EntityManagerFactory emf;
    private final SaleJpaController saleController;
    private final InventoryJpaController inventoryController;
    private final ProductJpaController productController;
    private SimpleDateFormat sdf;
    private static final String DATE_FORMAT = "dd/MM/yyyy";

    public DP2() {
        initComponents();
        emf = Persistence.createEntityManagerFactory("DP2PU");
        sdf = new SimpleDateFormat(DATE_FORMAT);
        saleController = new SaleJpaController(emf);
        productController = new ProductJpaController(emf);
        inventoryController = new InventoryJpaController(emf);
        saleSearchPanel.setVisible(false);
        allSalePanel.setVisible(false);
        addSalePanel.setVisible(false);
        editSalePanel.setVisible(false);
        outOfStockPanel.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saleSearchPanel = new javax.swing.JPanel();
        txtSearchSaleId = new javax.swing.JTextField();
        btnSaleSearch = new javax.swing.JButton();
        lblSaleId = new javax.swing.JLabel();
        btnClearSaleSearch = new javax.swing.JButton();
        lblSaleSearch = new javax.swing.JLabel();
        btnSaleSearchBack = new javax.swing.JButton();
        txtSearchProdId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        lblMain = new javax.swing.JLabel();
        btnAddSaleRecod = new javax.swing.JButton();
        btnMonthlyReport = new javax.swing.JButton();
        btnWeeklyReport = new javax.swing.JButton();
        btnSaleSearchPanel = new javax.swing.JButton();
        GetAllSales = new javax.swing.JButton();
        btnStockAlertWarning = new javax.swing.JButton();
        allSalePanel = new javax.swing.JPanel();
        allSaleScrollPane = new javax.swing.JScrollPane();
        allSaleBack = new javax.swing.JButton();
        addSalePanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtAddSaleId = new javax.swing.JTextField();
        txtAddProductId = new javax.swing.JTextField();
        txtAddSaleQty = new javax.swing.JTextField();
        txtAddSaleDate = new javax.swing.JTextField();
        btnAddSale = new javax.swing.JButton();
        btnAddSaleClear = new javax.swing.JButton();
        btnAddSaleBack = new javax.swing.JButton();
        lblAddSaleId = new javax.swing.JLabel();
        lblAddProductId = new javax.swing.JLabel();
        lblAddSaleQty = new javax.swing.JLabel();
        lblAddSaleDate = new javax.swing.JLabel();
        editSalePanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtEditSaleId = new javax.swing.JTextField();
        txtEditProductId = new javax.swing.JTextField();
        txtEditSaleQty = new javax.swing.JTextField();
        txtEditSalePrice = new javax.swing.JTextField();
        txtEditSaleDate = new javax.swing.JTextField();
        btnCancelSaveSale = new javax.swing.JButton();
        lblEditSaleId = new javax.swing.JLabel();
        lblEditProductId = new javax.swing.JLabel();
        lblEditSaleQty = new javax.swing.JLabel();
        lblEditSalePrice = new javax.swing.JLabel();
        lblEditSaleDate = new javax.swing.JLabel();
        btnEditSaveSale = new javax.swing.JButton();
        outOfStockPanel = new javax.swing.JPanel();
        lblOutOfStock = new javax.swing.JLabel();
        lblLowStockAlert = new javax.swing.JLabel();
        allLowStockAlert = new javax.swing.JScrollPane();
        lblLowStockWarning = new javax.swing.JLabel();
        allLowStockWarning = new javax.swing.JScrollPane();
        btnInvAlertBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtSearchSaleId.setText("776496839426");

        btnSaleSearch.setText("Search");
        btnSaleSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleSearchActionPerformed(evt);
            }
        });

        lblSaleId.setText("Sale ID");

        btnClearSaleSearch.setText("Clear");

        lblSaleSearch.setText("SALE RECORD SEARCH");

        btnSaleSearchBack.setText("Back");
        btnSaleSearchBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleSearchBackActionPerformed(evt);
            }
        });

        txtSearchProdId.setText("40973769");

        jLabel1.setText("Product ID");

        javax.swing.GroupLayout saleSearchPanelLayout = new javax.swing.GroupLayout(saleSearchPanel);
        saleSearchPanel.setLayout(saleSearchPanelLayout);
        saleSearchPanelLayout.setHorizontalGroup(
            saleSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, saleSearchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(saleSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSaleId, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(saleSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearchSaleId, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                    .addGroup(saleSearchPanelLayout.createSequentialGroup()
                        .addComponent(btnSaleSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClearSaleSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSaleSearchBack))
                    .addComponent(txtSearchProdId))
                .addGap(72, 72, 72))
            .addGroup(saleSearchPanelLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(lblSaleSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        saleSearchPanelLayout.setVerticalGroup(
            saleSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saleSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSaleSearch)
                .addGap(23, 23, 23)
                .addGroup(saleSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchSaleId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSaleId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(saleSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchProdId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(16, 16, 16)
                .addGroup(saleSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaleSearch)
                    .addComponent(btnClearSaleSearch)
                    .addComponent(btnSaleSearchBack))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblMain.setText("PEOPLE HEALTH PHARMACY");

        btnAddSaleRecod.setText("Add Sales Record");
        btnAddSaleRecod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSaleRecodActionPerformed(evt);
            }
        });

        btnMonthlyReport.setText("Monthly Sale Report");

        btnWeeklyReport.setText("Weekly Sales Report");

        btnSaleSearchPanel.setText("Sale Search");
        btnSaleSearchPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleSearchPanelActionPerformed(evt);
            }
        });

        GetAllSales.setText("Get All Sales");
        GetAllSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetAllSalesActionPerformed(evt);
            }
        });

        btnStockAlertWarning.setText("Stock Alerts and Warnings");
        btnStockAlertWarning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStockAlertWarningActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblMain)
                .addGap(96, 96, 96))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddSaleRecod)
                            .addComponent(btnWeeklyReport))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnMonthlyReport, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSaleSearchPanel, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(GetAllSales)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnStockAlertWarning)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMain)
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddSaleRecod)
                    .addComponent(btnMonthlyReport))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnWeeklyReport)
                    .addComponent(btnSaleSearchPanel))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GetAllSales)
                    .addComponent(btnStockAlertWarning))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        allSaleBack.setText("Back");
        allSaleBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allSaleBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout allSalePanelLayout = new javax.swing.GroupLayout(allSalePanel);
        allSalePanel.setLayout(allSalePanelLayout);
        allSalePanelLayout.setHorizontalGroup(
            allSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allSalePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allSaleScrollPane)
                .addContainerGap())
            .addGroup(allSalePanelLayout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(allSaleBack)
                .addContainerGap(186, Short.MAX_VALUE))
        );
        allSalePanelLayout.setVerticalGroup(
            allSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allSalePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allSaleScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(allSaleBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setText("ADD SALE RECORD");

        txtAddSaleId.setText("776496839426");

        txtAddProductId.setText("40973769");

        txtAddSaleDate.setText("03/05/2016");

        btnAddSale.setText("Add");
        btnAddSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSaleActionPerformed(evt);
            }
        });

        btnAddSaleClear.setText("Clear");

        btnAddSaleBack.setText("Back");
        btnAddSaleBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSaleBackActionPerformed(evt);
            }
        });

        lblAddSaleId.setText("Sale ID");

        lblAddProductId.setText("Product ID");

        lblAddSaleQty.setText("Qty");

        lblAddSaleDate.setText("Date");

        javax.swing.GroupLayout addSalePanelLayout = new javax.swing.GroupLayout(addSalePanel);
        addSalePanel.setLayout(addSalePanelLayout);
        addSalePanelLayout.setHorizontalGroup(
            addSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSalePanelLayout.createSequentialGroup()
                .addGroup(addSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addSalePanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(addSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAddSaleId)
                            .addComponent(lblAddProductId)
                            .addComponent(lblAddSaleQty)
                            .addComponent(lblAddSaleDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7)
                            .addComponent(txtAddSaleId)
                            .addComponent(txtAddProductId)
                            .addComponent(txtAddSaleQty)
                            .addComponent(txtAddSaleDate)))
                    .addGroup(addSalePanelLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(btnAddSale)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddSaleClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddSaleBack)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        addSalePanelLayout.setVerticalGroup(
            addSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSalePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(addSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddSaleId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddSaleId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddProductId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddProductId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddSaleQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddSaleQty))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddSaleDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddSaleDate))
                .addGap(28, 28, 28)
                .addGroup(addSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddSale)
                    .addComponent(btnAddSaleClear)
                    .addComponent(btnAddSaleBack))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jLabel13.setText("SALE RECORD");

        txtEditSaleId.setEditable(false);

        txtEditProductId.setEditable(false);

        txtEditSaleQty.setEditable(false);

        txtEditSalePrice.setEditable(false);

        txtEditSaleDate.setEditable(false);

        btnCancelSaveSale.setText("Cancel");
        btnCancelSaveSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelSaveSaleActionPerformed(evt);
            }
        });

        lblEditSaleId.setText("Sale ID");

        lblEditProductId.setText("Product ID");

        lblEditSaleQty.setText("Qty");

        lblEditSalePrice.setText("Price");

        lblEditSaleDate.setText("Date");

        btnEditSaveSale.setText("Edit");
        btnEditSaveSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditSaveSaleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editSalePanelLayout = new javax.swing.GroupLayout(editSalePanel);
        editSalePanel.setLayout(editSalePanelLayout);
        editSalePanelLayout.setHorizontalGroup(
            editSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editSalePanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(editSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblEditSaleId)
                    .addComponent(lblEditProductId)
                    .addComponent(lblEditSaleQty)
                    .addComponent(lblEditSalePrice)
                    .addComponent(lblEditSaleDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel13)
                        .addComponent(txtEditSaleId, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                        .addComponent(txtEditProductId)
                        .addComponent(txtEditSaleQty)
                        .addComponent(txtEditSalePrice)
                        .addComponent(txtEditSaleDate))
                    .addGroup(editSalePanelLayout.createSequentialGroup()
                        .addComponent(btnEditSaveSale)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelSaveSale)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        editSalePanelLayout.setVerticalGroup(
            editSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editSalePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addGroup(editSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEditSaleId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEditSaleId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEditProductId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEditProductId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEditSaleQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEditSaleQty))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEditSalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEditSalePrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEditSaleDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEditSaleDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelSaveSale)
                    .addComponent(btnEditSaveSale))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblOutOfStock.setText("ALERTS AND WARNINGS");

        lblLowStockAlert.setText("Low Stock Alert");

        lblLowStockWarning.setText("Low Stock Warning");

        btnInvAlertBack.setText("Back");
        btnInvAlertBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvAlertBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout outOfStockPanelLayout = new javax.swing.GroupLayout(outOfStockPanel);
        outOfStockPanel.setLayout(outOfStockPanelLayout);
        outOfStockPanelLayout.setHorizontalGroup(
            outOfStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outOfStockPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLowStockWarning)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(outOfStockPanelLayout.createSequentialGroup()
                .addGroup(outOfStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(allLowStockAlert, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(outOfStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(outOfStockPanelLayout.createSequentialGroup()
                            .addGap(165, 165, 165)
                            .addComponent(lblOutOfStock)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(outOfStockPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(lblLowStockAlert)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnInvAlertBack)))
                    .addComponent(allLowStockWarning))
                .addContainerGap())
        );
        outOfStockPanelLayout.setVerticalGroup(
            outOfStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outOfStockPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblOutOfStock)
                .addGap(18, 18, 18)
                .addGroup(outOfStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLowStockAlert)
                    .addComponent(btnInvAlertBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allLowStockAlert, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblLowStockWarning)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allLowStockWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saleSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 330, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addSalePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editSalePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allSalePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(outOfStockPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(305, 305, 305))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(editSalePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addSalePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saleSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)
                        .addComponent(allSalePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(outOfStockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaleSearchPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleSearchPanelActionPerformed
        mainPanel.setVisible(false);
        saleSearchPanel.setVisible(true);
    }//GEN-LAST:event_btnSaleSearchPanelActionPerformed

    private void GetAllSalesActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_GetAllSalesActionPerformed
    {//GEN-HEADEREND:event_GetAllSalesActionPerformed
        // TODO add your handling code here:
        mainPanel.setVisible(false);
        allSalePanel.setVisible(true);
        List<Sale> results = saleController.findSaleEntities();
        List<String[]> data = new ArrayList<>();
        String[] columnNames = {"Sales ID", "Product ID", "Qty", "Price", "SaleDate"};
        for (Sale sale : results) {
            data.add(new String[]{
                sale.getSalePK().getSaleId() + "",
                sale.getSalePK().getProdId() + "",
                sale.getSaleQty() + "",
                sale.getSalePrice() + "",
                sdf.format(sale.getSaleDate())
            });
            
        }
        JTable allSaleTable = new JTable(data.toArray(new Object[][]{}), columnNames);
        allSaleScrollPane.getViewport().add(allSaleTable);
    }//GEN-LAST:event_GetAllSalesActionPerformed

    private void allSaleBackActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_allSaleBackActionPerformed
    {//GEN-HEADEREND:event_allSaleBackActionPerformed
        // TODO add your handling code here:
        mainPanel.setVisible(true);
        allSalePanel.setVisible(false);
    }//GEN-LAST:event_allSaleBackActionPerformed

    private void btnAddSaleBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSaleBackActionPerformed
        mainPanel.setVisible(true);
        addSalePanel.setVisible(false);
    }//GEN-LAST:event_btnAddSaleBackActionPerformed

    private void btnAddSaleRecodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSaleRecodActionPerformed
        addSalePanel.setVisible(true);
        mainPanel.setVisible(false);
    }//GEN-LAST:event_btnAddSaleRecodActionPerformed

    private void btnCancelSaveSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelSaveSaleActionPerformed
        txtEditSaleId.setEditable(false);
        txtEditProductId.setEditable(false);
        txtEditSaleQty.setEditable(false);
        txtEditSalePrice.setEditable(false);
        txtEditSaleDate.setEditable(false);
        saleSearchPanel.setVisible(true);
        editSalePanel.setVisible(false);

    }//GEN-LAST:event_btnCancelSaveSaleActionPerformed

    private void btnEditSaveSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditSaveSaleActionPerformed
        if (btnEditSaveSale.getText().equals("Save")) {
            try {
                String txtProdID = txtEditProductId.getText();
                String txtQty = txtEditSaleQty.getText();
                String txtPrice = txtEditSalePrice.getText();
                String txtDate = txtEditSaleDate.getText();

                //check empty fields
                if (this.isEmpty(lblEditProductId.getText(), txtProdID)) {
                    return;
                }
                if (this.isEmpty(lblEditSaleQty.getText(), txtQty)) {
                    return;
                }
                if (this.isEmpty(lblEditSalePrice.getText(), txtPrice)) {
                    return;
                }
                if (this.isEmpty(lblEditSaleDate.getText(), txtDate)) {
                    return;
                }

                //check parsing number
                if (!this.isInteger(txtProdID)) {
                    this.showError("Invalid Product ID");
                    return;
                }
                if (!this.isInteger(txtQty)) {
                    this.showError("Invalid Sale Quantity");
                    return;
                }
                if (!this.isDouble(txtPrice)) {
                    this.showError("Invalid Sale Price");
                    return;
                }

                long saleID = Long.parseLong(txtEditSaleId.getText());
                int prodID = Integer.parseInt(txtProdID);
                int editedQty = Integer.parseInt(txtQty);
                double price = Double.parseDouble(txtPrice);
                Date date = sdf.parse(txtDate);

                Product p = productController.findProduct(prodID);
                if (p == null) {
                    showError("Product ID does not exist");
                    return;
                }

                Sale sale = saleController.findSale(new SalePK(saleID, prodID));
                int saleQty = sale.getSaleQty();
                sale.setSaleQty(editedQty);
                sale.setSalePrice(new BigDecimal(price));
                sale.setSaleDate(date);
                
                Inventory inventory = inventoryController.findInventory(prodID);
                int currentInv = inventory.getInvQty();
                
                if (saleQty > editedQty) 
                    currentInv += saleQty - editedQty;
                if (saleQty < editedQty)
                    currentInv -= editedQty - saleQty;
                
                inventory.setInvQty(currentInv);

                saleController.edit(sale);
                inventoryController.edit(inventory);
                showMessage("Sale record saved");
            } catch (Exception e) {
                showError("Database connection lost");
            }
        }
        if (btnEditSaveSale.getText().equals("Edit")) {

            btnEditSaveSale.setText("Save");
            txtEditProductId.setEditable(true);
            txtEditSaleQty.setEditable(true);
            txtEditSalePrice.setEditable(true);
            txtEditSaleDate.setEditable(true);

        }
    }//GEN-LAST:event_btnEditSaveSaleActionPerformed

    private void btnAddSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSaleActionPerformed
        try {

            String txtSaleID = txtAddSaleId.getText();
            String txtProdID = txtAddProductId.getText();
            String txtQty = txtAddSaleQty.getText();
            String txtDate = txtAddSaleDate.getText();
            Date saleDate = null;

            //check empty fields
            if (this.isEmpty(lblAddSaleId.getText(), txtSaleID)) {
                return;
            }
            if (this.isEmpty(lblAddProductId.getText(), txtProdID)) {
                return;
            }
            if (this.isEmpty(lblAddSaleQty.getText(), txtQty)) {
                return;
            }
            if (this.isEmpty(lblAddSaleDate.getText(), txtDate)) {
                return;
            }

            //check parsing number
            if (!this.isLong(txtSaleID)) {
                this.showError("Invalid Sale ID");
                return;
            }
            if (!this.isInteger(txtProdID)) {
                this.showError("Invalid Product ID");
                return;
            }
            if (!this.isInteger(txtQty)) {
                this.showError("Invalid Sale Quantity");
                return;
            }
            
            //check parsing date
            if (!this.isDateString(txtDate)) {
                this.showError("Invalid Sale Date");
                return;
            }

            long saleID = Long.parseLong(txtSaleID);
            int prodID = Integer.parseInt(txtProdID);
            int qty = Integer.parseInt(txtQty);
            
            //check product id
            Product p = productController.findProduct(prodID);
            
            if (p == null) {
                this.showError("Invalid Product ID");
                return;
            }  
            
            BigDecimal price = p.getProdPrice();
            saleDate = this.formatStrToDate(txtDate);

            Sale sale = new Sale(saleID, prodID);
            sale.setSaleQty(qty);
            sale.setSalePrice(price);
            sale.setSaleDate(saleDate);
            sale.setProduct(p);
            
            Inventory inventory = inventoryController.findInventory(prodID);
            int currentInv = inventory.getInvQty();
            inventory.setInvQty(currentInv - qty);

            saleController.create(sale);
            inventoryController.edit(inventory);
            
            showMessage("Sale record added");

        } catch (PreexistingEntityException ex) {
            showError("Sale record exists ");
        } catch (Exception ex) {
            showError("Database connection error");
        }


    }//GEN-LAST:event_btnAddSaleActionPerformed

    private void btnSaleSearchBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleSearchBackActionPerformed
        mainPanel.setVisible(true);
        saleSearchPanel.setVisible(false);
    }//GEN-LAST:event_btnSaleSearchBackActionPerformed

    private void btnSaleSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleSearchActionPerformed
        String txtSaleId = txtSearchSaleId.getText();
        String txtProdId = txtSearchProdId.getText();
        if (this.isEmpty("Sale ID", txtSaleId)) {
            return;
        }
        if (this.isEmpty("Product ID", txtProdId)) {
            return;
        }
        if (!this.isInteger(txtProdId)) {
            showError("Invalid Product ID");
            return;
        }
        if (!this.isLong(txtSaleId)) {
            showError("Invalid Sale ID");
            return;
        }

        long saleId = Long.parseLong(txtSaleId);
        int prodId = Integer.parseInt(txtProdId);

        Sale result = saleController.findSale(new SalePK(saleId, prodId));
        if (result == null) {
            showError("Sale record does not exist");
            return;
        }

        txtEditSaleId.setText(result.getSalePK().getSaleId() + "");
        txtEditProductId.setText(result.getSalePK().getProdId() + "");
        txtEditSaleQty.setText(result.getSaleQty() + "");
        txtEditSalePrice.setText(result.getSalePrice() + "");
        txtEditSaleDate.setText(sdf.format(result.getSaleDate()));

        saleSearchPanel.setVisible(false);
        editSalePanel.setVisible(true);
    }//GEN-LAST:event_btnSaleSearchActionPerformed

    private void btnStockAlertWarningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStockAlertWarningActionPerformed
        // TODO add your handling code here:
        mainPanel.setVisible(false);
        outOfStockPanel.setVisible(true);

        //List<Inventory> results = inventoryController.findLowStock();
        List<String[]> data = new ArrayList<>();
        String[] columnNames = {"Product ID", "Product Name"};

        //LOW STOCK ALERT TABLE
        ResultSet lsa = inventoryController.findLowStock2();

        try
        {
            while (lsa.next())
            {
                data.add( new String[] {
                    lsa.getString(1),
                    lsa.getString(2)
                });
            }
        }
        catch (SQLException ex)
        {
            System.out.println(ex.toString());
        }
        JTable allLowStockTable = new JTable(data.toArray(new Object[][]{}), columnNames);
        allLowStockAlert.getViewport().add(allLowStockTable);

        // LOW STOCK WARNING TABLE
        ResultSet lsw = inventoryController.findWarningStock2();
        data.clear();

        try
        {
            while (lsw.next())
            {
                data.add( new String[] {
                    lsw.getString(1),
                    lsw.getString(2)
                });
            }
        }
        catch (SQLException ex)
        {
            System.out.println(ex.toString());
        }
        //        results = inventoryController.findWarningStock();
        //        data = new ArrayList<>();
        //        for (Inventory inventory : results) {
            //            data.add(new String[] {
                //                inventory.getProdId().toString() + ""
                //            });
        //        }
        allLowStockTable = new JTable(data.toArray(new Object[][]{}), columnNames);
        allLowStockWarning.getViewport().add(allLowStockTable);
    }//GEN-LAST:event_btnStockAlertWarningActionPerformed

    private void btnInvAlertBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvAlertBackActionPerformed
        mainPanel.setVisible(true);
        outOfStockPanel.setVisible(false);
    }//GEN-LAST:event_btnInvAlertBackActionPerformed

    private boolean isDateString(String s) {
        try {
            Date d = this.formatStrToDate(s);
            return true;
        } catch (ParseException e) {
            return false;
        }
    }

    private Date formatStrToDate(String s) throws ParseException {
        SimpleDateFormat formatter = new SimpleDateFormat(DATE_FORMAT);
        Date result = formatter.parse(s);
        return result;
    }

    private boolean isInteger(String s) {
        try {
            int i = Integer.parseInt(s);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    private boolean isLong(String s) {
        try {
            long n = Long.parseLong(s);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    private boolean isDouble(String s) {
        try {
            double d = Double.parseDouble(s);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }

    }

    private boolean isEmpty(String fieldname, String value) {
        if (value.isEmpty()) {
            this.showError(fieldname + " cannot be empty");
            return true;
        } else {
            return false;
        }
    }

    private void showError(String msg) {
        JOptionPane.showMessageDialog(rootPane,
                msg, "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    private void showMessage(String msg) {
        JOptionPane.showMessageDialog(rootPane,
                msg, null, JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DP2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DP2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DP2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DP2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DP2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GetAllSales;
    private javax.swing.JPanel addSalePanel;
    private javax.swing.JScrollPane allLowStockAlert;
    private javax.swing.JScrollPane allLowStockWarning;
    private javax.swing.JButton allSaleBack;
    private javax.swing.JPanel allSalePanel;
    private javax.swing.JScrollPane allSaleScrollPane;
    private javax.swing.JButton btnAddSale;
    private javax.swing.JButton btnAddSaleBack;
    private javax.swing.JButton btnAddSaleClear;
    private javax.swing.JButton btnAddSaleRecod;
    private javax.swing.JButton btnCancelSaveSale;
    private javax.swing.JButton btnClearSaleSearch;
    private javax.swing.JButton btnEditSaveSale;
    private javax.swing.JButton btnInvAlertBack;
    private javax.swing.JButton btnMonthlyReport;
    private javax.swing.JButton btnSaleSearch;
    private javax.swing.JButton btnSaleSearchBack;
    private javax.swing.JButton btnSaleSearchPanel;
    private javax.swing.JButton btnStockAlertWarning;
    private javax.swing.JButton btnWeeklyReport;
    private javax.swing.JPanel editSalePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblAddProductId;
    private javax.swing.JLabel lblAddSaleDate;
    private javax.swing.JLabel lblAddSaleId;
    private javax.swing.JLabel lblAddSaleQty;
    private javax.swing.JLabel lblEditProductId;
    private javax.swing.JLabel lblEditSaleDate;
    private javax.swing.JLabel lblEditSaleId;
    private javax.swing.JLabel lblEditSalePrice;
    private javax.swing.JLabel lblEditSaleQty;
    private javax.swing.JLabel lblLowStockAlert;
    private javax.swing.JLabel lblLowStockWarning;
    private javax.swing.JLabel lblMain;
    private javax.swing.JLabel lblOutOfStock;
    private javax.swing.JLabel lblSaleId;
    private javax.swing.JLabel lblSaleSearch;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel outOfStockPanel;
    private javax.swing.JPanel saleSearchPanel;
    private javax.swing.JTextField txtAddProductId;
    private javax.swing.JTextField txtAddSaleDate;
    private javax.swing.JTextField txtAddSaleId;
    private javax.swing.JTextField txtAddSaleQty;
    private javax.swing.JTextField txtEditProductId;
    private javax.swing.JTextField txtEditSaleDate;
    private javax.swing.JTextField txtEditSaleId;
    private javax.swing.JTextField txtEditSalePrice;
    private javax.swing.JTextField txtEditSaleQty;
    private javax.swing.JTextField txtSearchProdId;
    private javax.swing.JTextField txtSearchSaleId;
    // End of variables declaration//GEN-END:variables
}
